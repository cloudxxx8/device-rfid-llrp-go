//
// Copyright (C) 2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by "stringer -type=ParamType,ConnectionAttemptEventType,StatusCode,AirProtocolIDType"; DO NOT EDIT.

package llrp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[paramInvalid-0]
	_ = x[ParamAntennaID-1]
	_ = x[ParamFirstSeenUTC-2]
	_ = x[ParamFirstSeenUptime-3]
	_ = x[ParamLastSeenUTC-4]
	_ = x[ParamLastSeenUptime-5]
	_ = x[ParamPeakRSSI-6]
	_ = x[ParamChannelIndex-7]
	_ = x[ParamTagSeenCount-8]
	_ = x[ParamROSpecID-9]
	_ = x[ParamInventoryParameterSpecID-10]
	_ = x[ParamC1G2CRC-11]
	_ = x[ParamC1G2PC-12]
	_ = x[ParamEPC96-13]
	_ = x[ParamSpecIndex-14]
	_ = x[ParamClientRequestOpSpecResult-15]
	_ = x[ParamAccessSpecID-16]
	_ = x[ParamOpSpecID-17]
	_ = x[ParamC1G2SingulationDetails-18]
	_ = x[ParamC1G2XPCW1-19]
	_ = x[ParamC1G2XPCW2-20]
	_ = x[ParamUTCTimestamp-128]
	_ = x[ParamUptime-129]
	_ = x[ParamGeneralDeviceCapabilities-137]
	_ = x[ParamReceiveSensitivityTableEntry-139]
	_ = x[ParamPerAntennaAirProtocol-140]
	_ = x[ParamGPIOCapabilities-141]
	_ = x[ParamLLRPCapabilities-142]
	_ = x[ParamRegulatoryCapabilities-143]
	_ = x[ParamUHFBandCapabilities-144]
	_ = x[ParamTransmitPowerLevelTableEntry-145]
	_ = x[ParamFrequencyInformation-146]
	_ = x[ParamFrequencyHopTable-147]
	_ = x[ParamFixedFrequencyTable-148]
	_ = x[ParamPerAntennaReceiveSensitivityRange-149]
	_ = x[ParamROSpec-177]
	_ = x[ParamROBoundarySpec-178]
	_ = x[ParamROSpecStartTrigger-179]
	_ = x[ParamPeriodicTriggerValue-180]
	_ = x[ParamGPITriggerValue-181]
	_ = x[ParamROSpecStopTrigger-182]
	_ = x[ParamAISpec-183]
	_ = x[ParamAISpecStopTrigger-184]
	_ = x[ParamTagObservationTrigger-185]
	_ = x[ParamInventoryParameterSpec-186]
	_ = x[ParamRFSurveySpec-187]
	_ = x[ParamRFSurveySpecStopTrigger-188]
	_ = x[ParamAccessSpec-207]
	_ = x[ParamAccessSpecStopTrigger-208]
	_ = x[ParamAccessCommand-209]
	_ = x[ParamClientRequestOpSpec-210]
	_ = x[ParamClientRequestResponse-211]
	_ = x[ParamLLRPConfigurationStateValue-217]
	_ = x[ParamIdentification-218]
	_ = x[ParamGPOWriteData-219]
	_ = x[ParamKeepAliveSpec-220]
	_ = x[ParamAntennaProperties-221]
	_ = x[ParamAntennaConfiguration-222]
	_ = x[ParamRFReceiver-223]
	_ = x[ParamRFTransmitter-224]
	_ = x[ParamGPIPortCurrentState-225]
	_ = x[ParamEventsAndReports-226]
	_ = x[ParamROReportSpec-237]
	_ = x[ParamTagReportContentSelector-238]
	_ = x[ParamAccessReportSpec-239]
	_ = x[ParamTagReportData-240]
	_ = x[ParamEPCData-241]
	_ = x[ParamRFSurveyReportData-242]
	_ = x[ParamFrequencyRSSILevelEntry-243]
	_ = x[ParamReaderEventNotificationSpec-244]
	_ = x[ParamEventNotificationState-245]
	_ = x[ParamReaderEventNotificationData-246]
	_ = x[ParamHoppingEvent-247]
	_ = x[ParamGPIEvent-248]
	_ = x[ParamROSpecEvent-249]
	_ = x[ParamReportBufferLevelWarningEvent-250]
	_ = x[ParamReportBufferOverflowErrorEvent-251]
	_ = x[ParamReaderExceptionEvent-252]
	_ = x[ParamRFSurveyEvent-253]
	_ = x[ParamAISpecEvent-254]
	_ = x[ParamAntennaEvent-255]
	_ = x[ParamConnectionAttemptEvent-256]
	_ = x[ParamConnectionCloseEvent-257]
	_ = x[ParamLLRPStatus-287]
	_ = x[ParamFieldError-288]
	_ = x[ParamParameterError-289]
	_ = x[ParamLoopSpec-355]
	_ = x[ParamSpecLoopEvent-356]
	_ = x[ParamCustom-1023]
	_ = x[ParamC1G2LLRPCapabilities-327]
	_ = x[ParamUHFC1G2RFModeTable-328]
	_ = x[ParamUHFC1G2RFModeTableEntry-329]
	_ = x[ParamC1G2InventoryCommand-330]
	_ = x[ParamC1G2Filter-331]
	_ = x[ParamC1G2TagInventoryMask-332]
	_ = x[ParamC1G2TagInventoryStateAwareFilterAction-333]
	_ = x[ParamC1G2TagInventoryStateUnawareFilterAction-334]
	_ = x[ParamC1G2RFControl-335]
	_ = x[ParamC1G2SingulationControl-336]
	_ = x[ParamC1G2TagInventoryStateAwareSingulationAction-337]
	_ = x[ParamC1G2TagSpec-338]
	_ = x[ParamC1G2TargetTag-339]
	_ = x[ParamC1G2Read-341]
	_ = x[ParamC1G2Write-342]
	_ = x[ParamC1G2Kill-343]
	_ = x[ParamC1G2Lock-344]
	_ = x[ParamC1G2LockPayload-345]
	_ = x[ParamC1G2BlockErase-346]
	_ = x[ParamC1G2BlockWrite-347]
	_ = x[ParamC1G2EPCMemorySelector-348]
	_ = x[ParamC1G2ReadOpSpecResult-349]
	_ = x[ParamC1G2WriteOpSpecResult-350]
	_ = x[ParamC1G2KillOpSpecResult-351]
	_ = x[ParamC1G2LockOpSpecResult-352]
	_ = x[ParamC1G2BlockEraseOpSpecResult-353]
	_ = x[ParamC1G2BlockWriteOpSpecResult-354]
	_ = x[ParamC1G2Recommission-357]
	_ = x[ParamC1G2BlockPermalock-358]
	_ = x[ParamC1G2GetBlockPermalockStatus-359]
	_ = x[ParamC1G2RecommissionOpSpecResult-360]
	_ = x[ParamC1G2BlockPermalockOpSpecResult-361]
	_ = x[ParamC1G2GetBlockPermalockStatusOpSpecResult-362]
	_ = x[ParamMaximumReceiveSensitivity-363]
	_ = x[ParamRFSurveyFrequencyCapabilities-365]
	_ = x[paramResvStart-900]
	_ = x[paramResvEnd-999]
}

const _ParamType_name = "paramInvalidParamAntennaIDParamFirstSeenUTCParamFirstSeenUptimeParamLastSeenUTCParamLastSeenUptimeParamPeakRSSIParamChannelIndexParamTagSeenCountParamROSpecIDParamInventoryParameterSpecIDParamC1G2CRCParamC1G2PCParamEPC96ParamSpecIndexParamClientRequestOpSpecResultParamAccessSpecIDParamOpSpecIDParamC1G2SingulationDetailsParamC1G2XPCW1ParamC1G2XPCW2ParamUTCTimestampParamUptimeParamGeneralDeviceCapabilitiesParamReceiveSensitivityTableEntryParamPerAntennaAirProtocolParamGPIOCapabilitiesParamLLRPCapabilitiesParamRegulatoryCapabilitiesParamUHFBandCapabilitiesParamTransmitPowerLevelTableEntryParamFrequencyInformationParamFrequencyHopTableParamFixedFrequencyTableParamPerAntennaReceiveSensitivityRangeParamROSpecParamROBoundarySpecParamROSpecStartTriggerParamPeriodicTriggerValueParamGPITriggerValueParamROSpecStopTriggerParamAISpecParamAISpecStopTriggerParamTagObservationTriggerParamInventoryParameterSpecParamRFSurveySpecParamRFSurveySpecStopTriggerParamAccessSpecParamAccessSpecStopTriggerParamAccessCommandParamClientRequestOpSpecParamClientRequestResponseParamLLRPConfigurationStateValueParamIdentificationParamGPOWriteDataParamKeepAliveSpecParamAntennaPropertiesParamAntennaConfigurationParamRFReceiverParamRFTransmitterParamGPIPortCurrentStateParamEventsAndReportsParamROReportSpecParamTagReportContentSelectorParamAccessReportSpecParamTagReportDataParamEPCDataParamRFSurveyReportDataParamFrequencyRSSILevelEntryParamReaderEventNotificationSpecParamEventNotificationStateParamReaderEventNotificationDataParamHoppingEventParamGPIEventParamROSpecEventParamReportBufferLevelWarningEventParamReportBufferOverflowErrorEventParamReaderExceptionEventParamRFSurveyEventParamAISpecEventParamAntennaEventParamConnectionAttemptEventParamConnectionCloseEventParamLLRPStatusParamFieldErrorParamParameterErrorParamC1G2LLRPCapabilitiesParamUHFC1G2RFModeTableParamUHFC1G2RFModeTableEntryParamC1G2InventoryCommandParamC1G2FilterParamC1G2TagInventoryMaskParamC1G2TagInventoryStateAwareFilterActionParamC1G2TagInventoryStateUnawareFilterActionParamC1G2RFControlParamC1G2SingulationControlParamC1G2TagInventoryStateAwareSingulationActionParamC1G2TagSpecParamC1G2TargetTagParamC1G2ReadParamC1G2WriteParamC1G2KillParamC1G2LockParamC1G2LockPayloadParamC1G2BlockEraseParamC1G2BlockWriteParamC1G2EPCMemorySelectorParamC1G2ReadOpSpecResultParamC1G2WriteOpSpecResultParamC1G2KillOpSpecResultParamC1G2LockOpSpecResultParamC1G2BlockEraseOpSpecResultParamC1G2BlockWriteOpSpecResultParamLoopSpecParamSpecLoopEventParamC1G2RecommissionParamC1G2BlockPermalockParamC1G2GetBlockPermalockStatusParamC1G2RecommissionOpSpecResultParamC1G2BlockPermalockOpSpecResultParamC1G2GetBlockPermalockStatusOpSpecResultParamMaximumReceiveSensitivityParamRFSurveyFrequencyCapabilitiesparamResvStartparamResvEndParamCustom"

var _ParamType_map = map[ParamType]string{
	0:    _ParamType_name[0:12],
	1:    _ParamType_name[12:26],
	2:    _ParamType_name[26:43],
	3:    _ParamType_name[43:63],
	4:    _ParamType_name[63:79],
	5:    _ParamType_name[79:98],
	6:    _ParamType_name[98:111],
	7:    _ParamType_name[111:128],
	8:    _ParamType_name[128:145],
	9:    _ParamType_name[145:158],
	10:   _ParamType_name[158:187],
	11:   _ParamType_name[187:199],
	12:   _ParamType_name[199:210],
	13:   _ParamType_name[210:220],
	14:   _ParamType_name[220:234],
	15:   _ParamType_name[234:264],
	16:   _ParamType_name[264:281],
	17:   _ParamType_name[281:294],
	18:   _ParamType_name[294:321],
	19:   _ParamType_name[321:335],
	20:   _ParamType_name[335:349],
	128:  _ParamType_name[349:366],
	129:  _ParamType_name[366:377],
	137:  _ParamType_name[377:407],
	139:  _ParamType_name[407:440],
	140:  _ParamType_name[440:466],
	141:  _ParamType_name[466:487],
	142:  _ParamType_name[487:508],
	143:  _ParamType_name[508:535],
	144:  _ParamType_name[535:559],
	145:  _ParamType_name[559:592],
	146:  _ParamType_name[592:617],
	147:  _ParamType_name[617:639],
	148:  _ParamType_name[639:663],
	149:  _ParamType_name[663:701],
	177:  _ParamType_name[701:712],
	178:  _ParamType_name[712:731],
	179:  _ParamType_name[731:754],
	180:  _ParamType_name[754:779],
	181:  _ParamType_name[779:799],
	182:  _ParamType_name[799:821],
	183:  _ParamType_name[821:832],
	184:  _ParamType_name[832:854],
	185:  _ParamType_name[854:880],
	186:  _ParamType_name[880:907],
	187:  _ParamType_name[907:924],
	188:  _ParamType_name[924:952],
	207:  _ParamType_name[952:967],
	208:  _ParamType_name[967:993],
	209:  _ParamType_name[993:1011],
	210:  _ParamType_name[1011:1035],
	211:  _ParamType_name[1035:1061],
	217:  _ParamType_name[1061:1093],
	218:  _ParamType_name[1093:1112],
	219:  _ParamType_name[1112:1129],
	220:  _ParamType_name[1129:1147],
	221:  _ParamType_name[1147:1169],
	222:  _ParamType_name[1169:1194],
	223:  _ParamType_name[1194:1209],
	224:  _ParamType_name[1209:1227],
	225:  _ParamType_name[1227:1251],
	226:  _ParamType_name[1251:1272],
	237:  _ParamType_name[1272:1289],
	238:  _ParamType_name[1289:1318],
	239:  _ParamType_name[1318:1339],
	240:  _ParamType_name[1339:1357],
	241:  _ParamType_name[1357:1369],
	242:  _ParamType_name[1369:1392],
	243:  _ParamType_name[1392:1420],
	244:  _ParamType_name[1420:1452],
	245:  _ParamType_name[1452:1479],
	246:  _ParamType_name[1479:1511],
	247:  _ParamType_name[1511:1528],
	248:  _ParamType_name[1528:1541],
	249:  _ParamType_name[1541:1557],
	250:  _ParamType_name[1557:1591],
	251:  _ParamType_name[1591:1626],
	252:  _ParamType_name[1626:1651],
	253:  _ParamType_name[1651:1669],
	254:  _ParamType_name[1669:1685],
	255:  _ParamType_name[1685:1702],
	256:  _ParamType_name[1702:1729],
	257:  _ParamType_name[1729:1754],
	287:  _ParamType_name[1754:1769],
	288:  _ParamType_name[1769:1784],
	289:  _ParamType_name[1784:1803],
	327:  _ParamType_name[1803:1828],
	328:  _ParamType_name[1828:1851],
	329:  _ParamType_name[1851:1879],
	330:  _ParamType_name[1879:1904],
	331:  _ParamType_name[1904:1919],
	332:  _ParamType_name[1919:1944],
	333:  _ParamType_name[1944:1987],
	334:  _ParamType_name[1987:2032],
	335:  _ParamType_name[2032:2050],
	336:  _ParamType_name[2050:2077],
	337:  _ParamType_name[2077:2125],
	338:  _ParamType_name[2125:2141],
	339:  _ParamType_name[2141:2159],
	341:  _ParamType_name[2159:2172],
	342:  _ParamType_name[2172:2186],
	343:  _ParamType_name[2186:2199],
	344:  _ParamType_name[2199:2212],
	345:  _ParamType_name[2212:2232],
	346:  _ParamType_name[2232:2251],
	347:  _ParamType_name[2251:2270],
	348:  _ParamType_name[2270:2296],
	349:  _ParamType_name[2296:2321],
	350:  _ParamType_name[2321:2347],
	351:  _ParamType_name[2347:2372],
	352:  _ParamType_name[2372:2397],
	353:  _ParamType_name[2397:2428],
	354:  _ParamType_name[2428:2459],
	355:  _ParamType_name[2459:2472],
	356:  _ParamType_name[2472:2490],
	357:  _ParamType_name[2490:2511],
	358:  _ParamType_name[2511:2534],
	359:  _ParamType_name[2534:2566],
	360:  _ParamType_name[2566:2599],
	361:  _ParamType_name[2599:2634],
	362:  _ParamType_name[2634:2678],
	363:  _ParamType_name[2678:2708],
	365:  _ParamType_name[2708:2742],
	900:  _ParamType_name[2742:2756],
	999:  _ParamType_name[2756:2768],
	1023: _ParamType_name[2768:2779],
}

func (i ParamType) String() string {
	if str, ok := _ParamType_map[i]; ok {
		return str
	}
	return "ParamType(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ConnSuccess-0]
	_ = x[ConnExistsReaderInitiated-1]
	_ = x[ConnExistsClientInitiated-2]
	_ = x[ConnFailedReasonUnknown-3]
	_ = x[ConnAttemptedAgain-4]
}

const _ConnectionAttemptEventType_name = "ConnSuccessConnExistsReaderInitiatedConnExistsClientInitiatedConnFailedReasonUnknownConnAttemptedAgain"

var _ConnectionAttemptEventType_index = [...]uint8{0, 11, 36, 61, 84, 102}

func (i ConnectionAttemptEventType) String() string {
	if i >= ConnectionAttemptEventType(len(_ConnectionAttemptEventType_index)-1) {
		return "ConnectionAttemptEventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConnectionAttemptEventType_name[_ConnectionAttemptEventType_index[i]:_ConnectionAttemptEventType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StatusSuccess-0]
	_ = x[StatusMsgParamError-100]
	_ = x[StatusMsgFieldError-101]
	_ = x[StatusMsgParamUnexpected-102]
	_ = x[StatusMsgParamMissing-103]
	_ = x[StatusMsgParamDuplicate-104]
	_ = x[StatusMsgParamOverflow-105]
	_ = x[StatusMsgFieldOverflow-106]
	_ = x[StatusMsgParamUnknown-107]
	_ = x[StatusMsgFieldUnknown-108]
	_ = x[StatusMsgMsgUnsupported-109]
	_ = x[StatusMsgVerUnsupported-110]
	_ = x[StatusMsgParamUnsupported-111]
	_ = x[StatusMsgMsgUnexpected-112]
	_ = x[StatusParamParamError-200]
	_ = x[StatusParamFieldError-201]
	_ = x[StatusParamParamUnexpected-202]
	_ = x[StatusParamParamMissing-203]
	_ = x[StatusParamParamDuplicate-204]
	_ = x[StatusParamParamOverflow-205]
	_ = x[StatusParamFieldOverflow-206]
	_ = x[StatusParamParamUnknown-207]
	_ = x[StatusParamFieldUnknown-208]
	_ = x[StatusParamParamUnsupported-209]
	_ = x[StatusFieldInvalid-300]
	_ = x[StatusFieldOutOfRange-301]
	_ = x[StatusDeviceError-401]
}

const (
	_StatusCode_name_0 = "StatusSuccess"
	_StatusCode_name_1 = "StatusMsgParamErrorStatusMsgFieldErrorStatusMsgParamUnexpectedStatusMsgParamMissingStatusMsgParamDuplicateStatusMsgParamOverflowStatusMsgFieldOverflowStatusMsgParamUnknownStatusMsgFieldUnknownStatusMsgMsgUnsupportedStatusMsgVerUnsupportedStatusMsgParamUnsupportedStatusMsgMsgUnexpected"
	_StatusCode_name_2 = "StatusParamParamErrorStatusParamFieldErrorStatusParamParamUnexpectedStatusParamParamMissingStatusParamParamDuplicateStatusParamParamOverflowStatusParamFieldOverflowStatusParamParamUnknownStatusParamFieldUnknownStatusParamParamUnsupported"
	_StatusCode_name_3 = "StatusFieldInvalidStatusFieldOutOfRange"
	_StatusCode_name_4 = "StatusDeviceError"
)

var (
	_StatusCode_index_1 = [...]uint16{0, 19, 38, 62, 83, 106, 128, 150, 171, 192, 215, 238, 263, 285}
	_StatusCode_index_2 = [...]uint8{0, 21, 42, 68, 91, 116, 140, 164, 187, 210, 237}
	_StatusCode_index_3 = [...]uint8{0, 18, 39}
)

func (i StatusCode) String() string {
	switch {
	case i == 0:
		return _StatusCode_name_0
	case 100 <= i && i <= 112:
		i -= 100
		return _StatusCode_name_1[_StatusCode_index_1[i]:_StatusCode_index_1[i+1]]
	case 200 <= i && i <= 209:
		i -= 200
		return _StatusCode_name_2[_StatusCode_index_2[i]:_StatusCode_index_2[i+1]]
	case 300 <= i && i <= 301:
		i -= 300
		return _StatusCode_name_3[_StatusCode_index_3[i]:_StatusCode_index_3[i+1]]
	case i == 401:
		return _StatusCode_name_4
	default:
		return "StatusCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AirProtoUnspecified-0]
	_ = x[AirProtoEPCGlobalClass1Gen2-1]
}

const _AirProtocolIDType_name = "AirProtoUnspecifiedAirProtoEPCGlobalClass1Gen2"

var _AirProtocolIDType_index = [...]uint8{0, 19, 46}

func (i AirProtocolIDType) String() string {
	if i >= AirProtocolIDType(len(_AirProtocolIDType_index)-1) {
		return "AirProtocolIDType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AirProtocolIDType_name[_AirProtocolIDType_index[i]:_AirProtocolIDType_index[i+1]]
}
